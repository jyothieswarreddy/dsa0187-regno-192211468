#include <iostream>
#include <string>

using namespace std;

// Base class
class Employee {
protected:
    string name;
    int id;
    double salary;

public:
    // Constructor
    Employee(string name, int id, double salary) : name(name), id(id), salary(salary) {}

    // Virtual function to be overridden by derived classes
    virtual void display() {
        cout << "Name: " << name << endl;
        cout << "ID: " << id << endl;
        cout << "Salary: $" << salary << endl;
    }
};

// Derived class Manager
class Manager : public Employee {
private:
    string department;

public:
    // Constructor
    Manager(string name, int id, double salary, string department) 
        : Employee(name, id, salary), department(department) {}

    // Overridden display function
    void display() override {
        Employee::display();
        cout << "Department: " << department << endl;
    }
};

// Derived class Worker
class Worker : public Employee {
private:
    string role;

public:
    // Constructor
    Worker(string name, int id, double salary, string role) 
        : Employee(name, id, salary), role(role) {}

    // Overridden display function
    void display() override {
        Employee::display();
        cout << "Role: " << role << endl;
    }
};

int main() {
    Manager manager("Alice", 101, 80000.0, "Engineering");
    Worker worker("Bob", 201, 50000.0, "Developer");

    cout << "Manager Details:" << endl;
    manager.display();

    cout << "\nWorker Details:" << endl;
    worker.display();

    return 0;
}
/*
output:
Manager Details:
Name: Alice
ID: 101
Salary: $80000
Department: Engineering

Worker Details:
Name: Bob
ID: 201
Salary: $50000
Role: Developer
*/