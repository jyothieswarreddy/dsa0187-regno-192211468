#include <iostream>
#include <string>

using namespace std;

// Base class
class Person {
protected:
    string name;
    int age;
    char gender;

public:
    // Constructor
    Person(const string& n, int a, char g) : name(n), age(a), gender(g) {}

    // Display function
    virtual void display() {
        cout << "Name: " << name << endl;
        cout << "Age: " << age << endl;
        cout << "Gender: " << gender << endl;
    }
};

// Derived class Student
class Student : public Person {
private:
    int rollNumber;
    double marks;

public:
    // Constructor
    Student(const string& n, int a, char g, int roll, double m) : Person(n, a, g), rollNumber(roll), marks(m) {}

    // Display function (overrides base class display)
    void display() override {
        Person::display(); // Call base class display
        cout << "Roll Number: " << rollNumber << endl;
        cout << "Marks: " << marks << endl;
    }
};

int main() {
    // Create Student object
    Student student("Alice", 20, 'F', 12345, 95.5);

    // Display student details
    student.display();

    return 0;
}
/*
output:
Name: Alice
Age: 20
Gender: F
Roll Number: 12345
Marks: 95.5
*/